# ChatGPT query
# Write a github actions file for my Rust project.
# The workflow should run cargo upgrade, build the code, test code, run cargo clippy,  run cargo audit, check for unused dependencies using cargo-udeps.
# Cargo-udeps, cargo-audit, cargo-edit must be installed in a single command line before running it.
# Cargo clippy command must fail if there is at least one warning in output.
# Cargo audit command  must fail if there is at least one warning in output. Cargo udeps command must fail if there is at least one warning in output.

name: Rust CI

on:
  push:
    branches:
      - release

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/
            target/
          # key: ${{ runner.os }}-cargo_v1-${{ hashFiles('**/Cargo.lock') }}
          key: ${{ runner.os }}-cargo_v2
          restore-keys: ${{ runner.os }}-cargo_v2

      - name: Install cargo-edit, cargo-udeps, and cargo-audit
        run: |
          cargo install --locked cargo-edit || true
          cargo install --locked cargo-udeps || true
          cargo install --locked cargo-audit || true

      - name: Upgrade dependencies
        run: |
          cargo upgrade --verbose
          cargo generate-lockfile

      - name: Build
        run: |
          cargo build

      - name: Test
        run: |
          if ! cargo test -q; then
            exit 1
          fi

      - name: Run cargo clippy
        run: |
          clippy_warnings=$(cargo clippy -q)
          if [ -n "$clippy_warnings" ]; then
            echo "$clippy_warnings"
            exit 1
          fi

      - name: Run cargo audit
        run: |
          rm -rf ~/.cargo/advisory-db
          audit_warnings=$(cargo audit -q)
          if [ -n "$audit_warnings" ]; then
            echo "$audit_warnings"
            exit 1
          fi

      # this does not work without nightly toolchain in CI
      - name: Check for unused dependencies using cargo-udeps
        run: |
          udeps_warnings=$(cargo +nightly udeps -q)
          if [ "$udeps_warnings" != "All deps seem to have been used." ]; then
            echo "$udeps_warnings"
            exit 1
          fi

  deploy:
    runs-on: self-hosted

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 0xfar5eer/rs-exchanges-parser

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./rs-exchanges-parser.Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
